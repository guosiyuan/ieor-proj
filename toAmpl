# variablesvar p1m1pA >= 0;var p1m1pB >= 0;var p1m1pC >= 0;var p1m1pD >= 0;var p1m1pE >= 0;var p2m1pA >= 0;var p2m1pB >= 0;var p2m1pC >= 0;var p2m1pD >= 0;var p2m1pE >= 0;var p3m1pA >= 0;var p3m1pB >= 0;var p3m1pC >= 0;var p3m1pD >= 0;var p3m1pE >= 0;var p1m1pCom1 >= 0;var p1m1pCom2 >= 0;var p1m1pCom3 >= 0;var p1m1pCom4 >= 0;var p2m1pCom1 >= 0;var p2m1pCom2 >= 0;var p2m1pCom3 >= 0;var p2m1pCom4 >= 0;var p3m1pCom1 >= 0;var p3m1pCom2 >= 0;var p3m1pCom3 >= 0;var p3m1pCom4 >= 0;var p1m2pA >= 0;var p1m2pB >= 0;var p1m2pC >= 0;var p1m2pD >= 0;var p1m2pE >= 0;var p2m2pA >= 0;var p2m2pB >= 0;var p2m2pC >= 0;var p2m2pD >= 0;var p2m2pE >= 0;var p3m2pA >= 0;var p3m2pB >= 0;var p3m2pC >= 0;var p3m2pD >= 0;var p3m2pE >= 0;var p1m2pCom1 >= 0;var p1m2pCom2 >= 0;var p1m2pCom3 >= 0;var p1m2pCom4 >= 0;var p2m2pCom1 >= 0;var p2m2pCom2 >= 0;var p2m2pCom3 >= 0;var p2m2pCom4 >= 0;var p3m2pCom1 >= 0;var p3m2pCom2 >= 0;var p3m2pCom3 >= 0;var p3m2pCom4 >= 0;var p1m1sA >= 0;var p1m1sB >= 0;var p1m1sC >= 0;var p1m1sD >= 0;var p1m1sE >= 0;var p2m1sA >= 0;var p2m1sB >= 0;var p2m1sC >= 0;var p2m1sD >= 0;var p2m1sE >= 0;var p3m1sA >= 0;var p3m1sB >= 0;var p3m1sC >= 0;var p3m1sD >= 0;var p3m1sE >= 0;var p1m1sCom1 >= 0;var p1m1sCom2 >= 0;var p1m1sCom3 >= 0;var p1m1sCom4 >= 0;var p2m1sCom1 >= 0;var p2m1sCom2 >= 0;var p2m1sCom3 >= 0;var p2m1sCom4 >= 0;var p3m1sCom1 >= 0;var p3m1sCom2 >= 0;var p3m1sCom3 >= 0;var p3m1sCom4 >= 0;var p1m2sA >= 0;var p1m2sB >= 0;var p1m2sC >= 0;var p1m2sD >= 0;var p1m2sE >= 0;var p2m2sA >= 0;var p2m2sB >= 0;var p2m2sC >= 0;var p2m2sD >= 0;var p2m2sE >= 0;var p3m2sA >= 0;var p3m2sB >= 0;var p3m2sC >= 0;var p3m2sD >= 0;var p3m2sE >= 0;var p1m2sCom1 >= 0;var p1m2sCom2 >= 0;var p1m2sCom3 >= 0;var p1m2sCom4 >= 0;var p2m2sCom1 >= 0;var p2m2sCom2 >= 0;var p2m2sCom3 >= 0;var p2m2sCom4 >= 0;var p3m2sCom1 >= 0;var p3m2sCom2 >= 0;var p3m2sCom3 >= 0;var p3m2sCom4 >= 0;var p1reA >= 0;var p1reB >= 0;var p1reC >= 0;var p1reD >= 0;var p1reE >= 0;var p2reA >= 0;var p2reB >= 0;var p2reC >= 0;var p2reD >= 0;var p2reE >= 0;var p3reA >= 0;var p3reB >= 0;var p3reC >= 0;var p3reD >= 0;var p3reE >= 0;var p1reCom1 >= 0;var p1reCom2 >= 0;var p1reCom3 >= 0;var p1reCom4 >= 0;var p2reCom1 >= 0;var p2reCom2 >= 0;var p2reCom3 >= 0;var p2reCom4 >= 0;var p3reCom1 >= 0;var p3reCom2 >= 0;var p3reCom3 >= 0;var p3reCom4 >= 0;maximize totalProfit: p1m1sA * 10 + p1m1sB * 25 + p1m1sC * 9 + p1m1sD * 17 + p1m1sE * 35 + p2m1sA * 10 + p2m1sB * 25 + p2m1sC * 8 + p2m1sD * 17 + p2m1sE * 30 + p3m1sA * 12 + p3m1sB * 30 + p3m1sC * 14 + p3m1sD * 22 + p3m1sE * 35 + p1m1sCom1 * 290 + p1m1sCom2 * 380 + p1m1sCom3 * 560 + p1m1sCom4 * 650 + p2m1sCom1 * 360 + p2m1sCom2 * 380 + p2m1sCom3 * 560 + p2m1sCom4 * 650 + p3m1sCom1 * 310 + p3m1sCom2 * 420 + p3m1sCom3 * 640 + p3m1sCom4 * 720 + p1m2sA * 10 + p1m2sB * 25 + p1m2sC * 9 + p1m2sD * 17 + p1m2sE * 35 + p2m2sA * 10 + p2m2sB * 25 + p2m2sC * 8 + p2m2sD * 17 + p2m2sE * 30 + p3m2sA * 12 + p3m2sB * 30 + p3m2sC * 14 + p3m2sD * 22 + p3m2sE * 35 + p1m2sCom1 * 290 + p1m2sCom2 * 380 + p1m2sCom3 * 560 + p1m2sCom4 * 650 + p2m2sCom1 * 360 + p2m2sCom2 * 380 + p2m2sCom3 * 560 + p2m2sCom4 * 650 + p3m2sCom1 * 310 + p3m2sCom2 * 420 + p3m2sCom3 * 640 + p3m2sCom4 * 720 +-p1m1pA * 6 - p1m1pB * 19 - p1m1pC * 4 - p1m1pD * 11 - p1m1pE * 26 - p2m1pA * 5 - p2m1pB * 18 - p2m1pC * 5 - p2m1pD * 12 - p2m1pE * 24 - p3m1pA * 7 - p3m1pB * 20 - p3m1pC * 5 - p3m1pD * 12 - p3m1pE * 27 - p1m1pCom1 * 178 - p1m1pCom2 * 228 - p1m1pCom3 * 350 - p1m1pCom4 * 420 - p2m1pCom1 * 175 - p2m1pCom2 * 220 - p2m1pCom3 * 360 - p2m1pCom4 * 435 - p3m1pCom1 * 180 - p3m1pCom2 * 240 - p3m1pCom3 * 370 - p3m1pCom4 * 450 - p1m2pA * 6.720000000000001 - p1m2pB * 21.28 - p1m2pC * 4.48 - p1m2pD * 12.32 - p1m2pE * 29.120000000000005 - p2m2pA * 5.6000000000000005 - p2m2pB * 20.160000000000004 - p2m2pC * 5.6000000000000005 - p2m2pD * 13.440000000000001 - p2m2pE * 26.880000000000003 - p3m2pA * 7.840000000000001 - p3m2pB * 22.400000000000002 - p3m2pC * 5.6000000000000005 - p3m2pD * 13.440000000000001 - p3m2pE * 30.240000000000002 - p1m2pCom1 * 199.36 - p1m2pCom2 * 255.36 - p1m2pCom3 * 392.00000000000006 - p1m2pCom4 * 470.40000000000003 - p2m2pCom1 * 196.00000000000003 - p2m2pCom2 * 246.40000000000003 - p2m2pCom3 * 403.20000000000005 - p2m2pCom4 * 487.20000000000005 - p3m2pCom1 * 201.60000000000002 - p3m2pCom2 * 268.8 - p3m2pCom3 * 414.40000000000003 - p3m2pCom4 * 504.00000000000006 - p1reA * 0.24 - p1reB * 0.76 - p1reC * 0.16 - p1reD * 0.44 - p1reE * 1.04 - p2reA * 0.2 - p2reB * 0.72 - p2reC * 0.2 - p2reD * 0.48 - p2reE * 0.96 - p3reA * 0.28 - p3reB * 0.8 - p3reC * 0.2 - p3reD * 0.48 - p3reE * 1.08 - p1reCom1 * 7.12 - p1reCom2 * 9.120000000000001 - p1reCom3 * 14.0 - p1reCom4 * 16.8 - p2reCom1 * 7.0 - p2reCom2 * 8.8 - p2reCom3 * 14.4 - p2reCom4 * 17.400000000000002 - p3reCom1 * 7.2 - p3reCom2 * 9.6 - p3reCom3 * 14.8 - p3reCom4 * 18.0 -;#constraints #number of reservation at the end of month one is equal to number of production minous number of sell and other consumption p1reCom1 = p1m1pCom1 - p1m1sCom1;p1reCom2 = p1m1pCom2 - p1m1sCom2;p1reCom3 = p1m1pCom3 - p1m1sCom3;p1reCom4 = p1m1pCom4 - p1m1sCom4;p2reCom1 = p2m1pCom1 - p2m1sCom1;p2reCom2 = p2m1pCom2 - p2m1sCom2;p2reCom3 = p2m1pCom3 - p2m1sCom3;p2reCom4 = p2m1pCom4 - p2m1sCom4;p3reCom1 = p3m1pCom1 - p3m1sCom1;p3reCom2 = p3m1pCom2 - p3m1sCom2;p3reCom3 = p3m1pCom3 - p3m1sCom3;p3reCom4 = p3m1pCom4 - p3m1sCom4;p1reA = p1m1pA - p1m1sA - 2 * p1m1pCom2 - 2 * p1m1pCom4;p1reB = p1m1pB - p1m1sB - 2 * p1m1pCom1 - 2 * p1m1pCom3;p1reC = p1m1pC - p1m1sC - p1m1pCom1 - p1m1pCom2 - p1m1pCom3 - p1m1pCom4;p1reD = p1m1pD - p1m1sD - 2 * p1m1pCom1 - 2 * p1m1pCom2;p1reE = p1m1pE - p1m1sE - 2 * p1m1pCom3 - 2 * p1m1pCom4;p2reA = p2m1pA - p2m1sA - 2 * p2m1pCom2 - 2 * p2m1pCom4;p2reB = p2m1pB - p2m1sB - 2 * p2m1pCom1 - 2 * p2m1pCom3;p2reC = p2m1pC - p2m1sC - p2m1pCom1 - p2m1pCom2 - p2m1pCom3 - p2m1pCom4;p2reD = p2m1pD - p2m1sD - 2 * p2m1pCom1 - 2 * p2m1pCom2;p2reE = p2m1pE - p2m1sE - 2 * p2m1pCom3 - 2 * p2m1pCom4;p3reA = p3m1pA - p3m1sA - 2 * p3m1pCom2 - 2 * p3m1pCom4;p3reB = p3m1pB - p3m1sB - 2 * p3m1pCom1 - 2 * p3m1pCom3;p3reC = p3m1pC - p3m1sC - p3m1pCom1 - p3m1pCom2 - p3m1pCom3 - p3m1pCom4;p3reD = p3m1pD - p3m1sD - 2 * p3m1pCom1 - 2 * p3m1pCom2;p3reE = p3m1pE - p3m1sE - 2 * p3m1pCom3 - 2 * p3m1pCom4;hhhhhh